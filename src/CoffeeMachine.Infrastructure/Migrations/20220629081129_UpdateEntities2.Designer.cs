// <auto-generated />
using System;
using CoffeeMachine.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoffeeMachine.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220629081129_UpdateEntities2")]
    partial class UpdateEntities2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Balance", b =>
                {
                    b.Property<Guid>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("EarnedMoney")
                        .HasColumnType("integer");

                    b.HasKey("BalanceId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.BanknoteCashbox", b =>
                {
                    b.Property<Guid>("BanknoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountBanknote")
                        .HasColumnType("integer");

                    b.Property<int>("Denomination")
                        .HasColumnType("integer");

                    b.HasKey("BanknoteId");

                    b.ToTable("BanknoteCashboxes");

                    b.HasData(
                        new
                        {
                            BanknoteId = new Guid("df0c6023-58c2-4f9e-8cb6-57d3df7d95ff"),
                            CountBanknote = 50,
                            Denomination = 50
                        },
                        new
                        {
                            BanknoteId = new Guid("d0ef9196-b8c1-4650-a5b0-662a41dda7b9"),
                            CountBanknote = 40,
                            Denomination = 100
                        },
                        new
                        {
                            BanknoteId = new Guid("25d7c364-da5e-473a-a64c-ee19849fba34"),
                            CountBanknote = 30,
                            Denomination = 200
                        },
                        new
                        {
                            BanknoteId = new Guid("494c6473-63f0-40c3-9ace-61ea6487b5ec"),
                            CountBanknote = 20,
                            Denomination = 500
                        },
                        new
                        {
                            BanknoteId = new Guid("8040df98-0a0e-493c-aa1a-881ed63d7afd"),
                            CountBanknote = 15,
                            Denomination = 1000
                        },
                        new
                        {
                            BanknoteId = new Guid("e66c9691-7cba-4ee2-8b81-7e843512ea57"),
                            CountBanknote = 10,
                            Denomination = 2000
                        },
                        new
                        {
                            BanknoteId = new Guid("2e0f54d8-bb5d-49d4-929e-53e7de42b7fb"),
                            CountBanknote = 5,
                            Denomination = 5000
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Coffee", b =>
                {
                    b.Property<Guid>("CoffeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("CoffeeId");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            CoffeeId = new Guid("56dc0c27-a56d-4fb9-a899-83d28223fffe"),
                            Name = "Капучино",
                            Price = 600
                        },
                        new
                        {
                            CoffeeId = new Guid("0a0151ed-1e06-47ca-956d-8b61e05163eb"),
                            Name = "Латте",
                            Price = 850
                        },
                        new
                        {
                            CoffeeId = new Guid("78f439f3-0804-48f4-96cf-f22c67b2a943"),
                            Name = "Американо",
                            Price = 900
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Income", b =>
                {
                    b.Property<Guid>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TotalIncome")
                        .HasColumnType("integer");

                    b.HasKey("IncomeId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClientMoney")
                        .HasColumnType("integer");

                    b.Property<Guid>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("Deal")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Balance", b =>
                {
                    b.HasOne("CoffeeMachine.Domain.Entities.Coffee", "Coffee")
                        .WithMany()
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Payment", b =>
                {
                    b.HasOne("CoffeeMachine.Domain.Entities.Coffee", "Coffee")
                        .WithMany("Payments")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Coffee", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
